/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Client;

import Data.Bin;
import Data.ChuDe;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kimdo
 */
public class formDeThi extends javax.swing.JFrame {
    List<ChuDe> chudeList = new ArrayList<>();
    DefaultTableModel tableModel;
    int taikhoan_id;
    boolean checkThi;
    /**
     * Creates new form formDeThi
     */
    public formDeThi() {
        initComponents();
        tableModel = (DefaultTableModel) tbDe.getModel();
        showChuDe();
        showCB();
        LayId();
    }
    private void showChuDe() {
        chudeList = DbAccess.findChuDe();
        
        tableModel.setRowCount(0);
        
        chudeList.forEach((ChuDe) -> {
            tableModel.addRow(new Object[] {ChuDe.getCHUDE_ID(), ChuDe.getTENCHUDE(), 
                ChuDe.getLOP_ID(), ChuDe.getSOCAUHOI(), ChuDe.getTIME()});
        });   
    }
     private void showCB() {
        List<String> data = DbAccess.findPhongThi();
        for(String s: data){
            cbPhongThi.addItem(s);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDe = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtTenChuDe = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSoCauHoi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtThoiGian = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnAddCauHoi = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        cbPhongThi = new javax.swing.JComboBox<>();
        jButton8 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Người dùng");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 88, 176, 52));

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setText("Thi");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 173, 176, 52));

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("Đề thi");
        jButton3.setEnabled(false);
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 336, 176, 53));

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setText("Đăng xuất");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 419, 176, 56));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Danh sách các bộ đề :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 42, 173, -1));

        tbDe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "STT", "Tên bộ đề", "Phòng thi", "Số câu hỏi", "Thời gian"
            }
        ));
        tbDe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbDe);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 71, 535, 132));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Tên chủ đề :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 264, -1, -1));
        getContentPane().add(txtTenChuDe, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 261, 170, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Phòng thi :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 372, 69, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Số câu hỏi :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 313, 63, -1));
        getContentPane().add(txtSoCauHoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 310, 170, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Thời gian :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(658, 405, 67, -1));
        getContentPane().add(txtThoiGian, new org.netbeans.lib.awtextra.AbsoluteConstraints(754, 402, 46, -1));

        btnThem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnThem.setText("Thêm đề");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        getContentPane().add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 451, 95, -1));

        btnSua.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnSua.setText("Sửa đề");
        btnSua.setEnabled(false);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        getContentPane().add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(497, 451, 89, -1));

        btnXoa.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnXoa.setText("Xóa đề");
        btnXoa.setEnabled(false);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        getContentPane().add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(638, 451, 87, -1));

        btnAddCauHoi.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnAddCauHoi.setText("Câu hỏi");
        btnAddCauHoi.setEnabled(false);
        btnAddCauHoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCauHoiActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddCauHoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(774, 451, 81, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("s/Câu");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(818, 405, 37, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("STT :");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 226, 37, -1));

        txtid.setEnabled(false);
        getContentPane().add(txtid, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 221, 28, -1));

        getContentPane().add(cbPhongThi, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 362, 427, -1));

        jButton8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton8.setText("Thống kê");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 257, 176, 48));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/phong-nen-xanh-duong.jpg"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 600));

        setSize(new java.awt.Dimension(1084, 607));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        formLogin frm = new  formLogin();
        frm.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tbDeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDeMouseClicked
        // TODO add your handling code here:
        int vitri = tbDe.getSelectedRow();
        txtid.setText(tbDe.getValueAt(vitri, 0).toString());
        txtTenChuDe.setText(tbDe.getValueAt(vitri, 1).toString());
        cbPhongThi.setSelectedItem(tbDe.getValueAt(vitri, 2).toString());
        txtSoCauHoi.setText(tbDe.getValueAt(vitri, 3).toString());
        txtThoiGian.setText(tbDe.getValueAt(vitri, 4).toString());
        try {
            checkThi();
        } catch (SQLException ex) {
            Logger.getLogger(formDeThi.class.getName()).log(Level.SEVERE, null, ex);
        }
         btnSua.setEnabled(false);
        if(checkThi == false ){
//            System.out.println("chewckthi" +checkThi);
            btnSua.setEnabled(true);
        }
//        btnSua.setEnabled(true);
        btnXoa.setEnabled(true);
        btnAddCauHoi.setEnabled(true);
        btnThem.setEnabled(false);
    }//GEN-LAST:event_tbDeMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int selectedIndex = tbDe.getSelectedRow();
        String ID = txtid.getText();
        Connection connection = null;
        PreparedStatement statement = null;
        if(selectedIndex >= 0) {
            ChuDe std = chudeList.get(selectedIndex);
            int option = JOptionPane.showConfirmDialog(this, "Muốn xóa không ?");
//            System.out.println("option : " + option);
            if(option == 0) {
                try {
            String URL = "jdbc:sqlserver://NAMHUYNH\\SQLEXPRESS:1433;"+
                    "databaseName=SHAREDETHI;user=sas;password=12345;encrypt=false";
            connection = DriverManager.getConnection(URL);
            String sql = "delete from CHUDE where CHUDE_ID = '"+ID+"'";
            statement = connection.prepareCall(sql);
            statement.execute();
        } catch (SQLException ex) {
            Logger.getLogger(formDeThi.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            if(statement != null) {
                try {
                    statement.close();
                } catch (SQLException ex) {
                    Logger.getLogger(formDeThi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException ex) {
                    Logger.getLogger(formDeThi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }                
        showChuDe();
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        Connection connection = null;
        PreparedStatement statement = null;
        String ID = txtid.getText();
        String ten = txtTenChuDe.getText();
        String phongthi = (String) cbPhongThi.getSelectedItem();
        String socauhoi = txtSoCauHoi.getText();
        String thoigian = txtThoiGian.getText();
        if(ten.isEmpty()){
            JOptionPane.showMessageDialog(this, "Không được để trống tên chủ đề ");
        }
        else{
             try {
            String URL = "jdbc:sqlserver://NAMHUYNH\\SQLEXPRESS:1433;"+
                    "databaseName=SHAREDETHI;user=sas;password=12345;encrypt=false";
            connection = DriverManager.getConnection(URL);
            String sql = "UPDATE CHUDE SET TENCHUDE = N'"+ten+"', LOP_ID = '"+phongthi+"', SOCAUHOI = N'"+socauhoi+"', TIME= '"+thoigian+"' WHERE CHUDE_ID = '"+ID+"';";
            statement = connection.prepareCall(sql);
            statement.execute();
        } catch (SQLException ex) {
            Logger.getLogger(formDeThi.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            if(statement != null) {
                try {
                    statement.close();
                } catch (SQLException ex) {
                    Logger.getLogger(formDeThi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException ex) {
                    Logger.getLogger(formDeThi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        showChuDe();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            // TODO add your handling code here:
            int id_taikhoan = Client.formLogin.id_taiKhoan;
            String send = "";
            String flag = "3";
            
            send += flag;
            send += "///";
            
            send += id_taikhoan;
            send += "///";
            Socket socket = new Socket("localhost", 8000);
            DataInputStream dis = new DataInputStream(socket.getInputStream());
            DataOutputStream dos = new DataOutputStream(socket.getOutputStream());
            dos.writeUTF(send);
             String receive = dis.readUTF();
             if ("0".equals(receive)) {
                             Connection connection = null;
            PreparedStatement statement = null;
            String ten = txtTenChuDe.getText();
            String phongthi = (String) cbPhongThi.getSelectedItem();
            String socauhoi = txtSoCauHoi.getText();
            String thoigian = txtThoiGian.getText();
            if(ten.isEmpty()){
                JOptionPane.showMessageDialog(this, "Không được để trống tên chủ đề ");
            }
            else{
                try {
                    String URL = "jdbc:sqlserver://NAMHUYNH\\SQLEXPRESS:1433;"+
                            "databaseName=SHAREDETHI;user=sas;password=12345;encrypt=false";
                    connection = DriverManager.getConnection(URL);
                    String sql = "insert into CHUDE(TENCHUDE, LOP_ID, SOCAUHOI, TIME, TAIKHOAN_ID) values(N'"+ten+"',N'"+phongthi+"','"+socauhoi+"',N'"+thoigian+"',N'"+taikhoan_id+"')";
                    statement = connection.prepareCall(sql);
                    statement.execute();
                } catch (SQLException ex) {
                    Logger.getLogger(formDeThi.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    if(statement != null) {
                        try {
                            statement.close();
                        } catch (SQLException ex) {
                            Logger.getLogger(formDeThi.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    
                    if (connection != null) {
                        try {
                            connection.close();
                        } catch (SQLException ex) {
                            Logger.getLogger(formDeThi.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
                showChuDe();
                socket.close();
                }
             } else {
                        JOptionPane.showMessageDialog(null, "Tài khoản bị khóa chức năng thêm đề thi");
                        socket.close();
                    }

        } catch (IOException ex) {
            Logger.getLogger(formDeThi.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnAddCauHoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCauHoiActionPerformed
        // TODO add your handling code here:
        formCauHoi frm2 = new formCauHoi(txtid.getText());
        frm2.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnAddCauHoiActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                        formNguoiDung frm = new  formNguoiDung();
        frm.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
                formThi frm = new  formThi();
        frm.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        formThongKe frm = new  formThongKe();
        frm.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formDeThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formDeThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formDeThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formDeThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formDeThi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCauHoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbPhongThi;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbDe;
    private javax.swing.JTextField txtSoCauHoi;
    private javax.swing.JTextField txtTenChuDe;
    private javax.swing.JTextField txtThoiGian;
    private javax.swing.JTextField txtid;
    // End of variables declaration//GEN-END:variables
public void LayId() {
        Connection connection = null;
        
        try {  
        Connection conn = null;       
        String QueryStr = "select * from BIN ";
        Server.DbAccess acc = new Server.DbAccess();

        ResultSet rsl = acc.Query(QueryStr);
        while (rsl.next()) {                
                Bin std = new Bin(rsl.getInt("ID"),rsl.getInt("ID_TAIKHOAN"),rsl.getInt("BLOCK"),
                rsl.getInt("BLOCKTAODE"),rsl.getInt("BLOCKTHI"),rsl.getInt("ID_CHUDE"),
                rsl.getInt("SOCAUHOI"),rsl.getInt("THOIGIAN"));
               taikhoan_id = std.getID_TAIKHOAN();
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {                     
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Server.DbAccess.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
public void checkThi () throws SQLException {
    
            int ChuDe_id = Integer.parseInt(txtid.getText());
//            System.out.println("chudeid"+ChuDe_id);
            DbAccess acc = new DbAccess();
            String QueryStr = "select * from SCORE where CHUDE_ID = '"+ChuDe_id+"'";

            ResultSet rs = acc.Query(QueryStr);

            if (rs.next()){ 
               checkThi = true;
            }
            else {
                checkThi = false;
            }
    }
}
